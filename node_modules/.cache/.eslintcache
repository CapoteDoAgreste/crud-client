[{"/home/brisanet/Documentos/capote/react/crud/client_/crud/src/index.js":"1","/home/brisanet/Documentos/capote/react/crud/client_/crud/src/App.js":"2","/home/brisanet/Documentos/capote/react/crud/client_/crud/src/components/cards.js":"3","/home/brisanet/Documentos/capote/react/crud/client_/crud/src/components/dialog.js":"4"},{"size":254,"mtime":1688393414664,"results":"5","hashOfConfig":"6"},{"size":6110,"mtime":1688759716710,"results":"7","hashOfConfig":"6"},{"size":2293,"mtime":1688748976413,"results":"8","hashOfConfig":"6"},{"size":4773,"mtime":1688758887568,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1ndb1ae",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/home/brisanet/Documentos/capote/react/crud/client_/crud/src/index.js",[],[],[],"/home/brisanet/Documentos/capote/react/crud/client_/crud/src/App.js",["26","27","28"],[],"/home/brisanet/Documentos/capote/react/crud/client_/crud/src/components/cards.js",["29","30"],["31","32","33"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport FormDialog from \"./dialog\";\nimport axios from \"axios\";\n\nexport default function Cards(props) {\n  const [open, setOpen] = useState(false);\n  const [refresh, refreshInit] = useState(0);\n\n  //get data gived to the component\n  const { id, name, cost, category, cardRefresh } = props;\n\n  //open edit modal\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  //delete game profile from database\n  const deleteCard = () => {\n    axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n      cardRefresh();\n    });\n  };\n\n  const options = {\n    style: \"currency\",\n    currency: \"BRL\",\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  };\n  const formatNumber = new Intl.NumberFormat(\"pt-BR\", options);\n\n  return (\n    <div class=\"mx-auto\">\n      <FormDialog\n        open={open}\n        setOpen={setOpen}\n        cardRefresh={cardRefresh}\n        id={id}\n        name={name}\n        cost={cost}\n        category={category}\n      />\n      <div class=\"card game-profile\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{name}</h5>\n          <p class=\"card-text\">{category}</p>\n          <a href=\"#\" class=\"btn btn-primary price-btn\">\n            {formatNumber.format(cost)}\n          </a>\n\n          <a href=\"#\" class=\"btn btn-danger delete-btn\" onClick={deleteCard}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-trash\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\" />\n              <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\" />\n            </svg>\n          </a>\n\n          <a href=\"#\" class=\"btn btn-danger edit-btn\" onClick={handleOpen}>\n            Edit\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n",[],"/home/brisanet/Documentos/capote/react/crud/client_/crud/src/components/dialog.js",["34","35","36","37","38","39"],[],"import React, { useState } from \"react\";\nimport { Dialog, makeStyles } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#242008\",\n        borderRadius: \"2rem\",\n        color: \"#f5f4ee\",\n      },\n    },\n    MuiInputBase: {\n      input: {\n        color: \"#f5f4ee\",\n      },\n      disabled: {\n        color: \"rgba(255, 255, 255, 0.7)\", // Change the color to your desired disabled color\n      },\n    },\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottomColor: \"#f5f4ee\",\n        },\n        \"&:hover:not($disabled):before\": {\n          borderBottomColor: \"#f5f4ee\",\n        },\n        \"&:after\": {\n          borderBottomColor: \"#f5f4ee\",\n        },\n        \"&:hover:not($disabled):not($focused):not($error):before\": {\n          borderBottomColor: \"#f5f4ee\",\n        },\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        color: \"#f5f4ee\",\n      },\n      disabled: {\n        color: \"#f5f4ee\",\n      },\n    },\n  },\n});\n\nexport default function FormDialog(props) {\n  //get data gived to the component\n  const [editValues, setEditValues] = useState({\n    id: props.id,\n    name: props.name,\n    cost: props.cost,\n    category: props.category,\n  });\n  const [refresh, refreshInit] = useState(0);\n\n  //get input data\n  const handleChangeValues = (value) => {\n    setEditValues((prevValues) => ({\n      ...prevValues,\n      [value.target.id]: value.target.value,\n    }));\n  };\n\n  //submit editions\n  const handleEditGame = async (values) => {\n    await axios\n      .put(\"http://localhost:3001/edit\", {\n        id: editValues.id,\n        name: editValues.name,\n        cost: editValues.cost,\n        category: editValues.category,\n      })\n      .then((response) => {\n        props.cardRefresh();\n      });\n\n    props.cardRefresh();\n    handleClose();\n  };\n\n  //Delete card\n  const handleDeleteGame = async (values) => {\n    await axios\n      .delete(`http://localhost:3001/delete/${editValues.id}`)\n      .then((response) => {\n        props.cardRefresh();\n        handleClose();\n      });\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    props.setOpen(true);\n  };\n\n  const handleClose = () => {\n    props.setOpen(false);\n    props.cardRefresh();\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Dialog\n          open={props.open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar</DialogTitle>\n          <DialogContent>\n            <TextField\n              disabled\n              margin=\"dense\"\n              id=\"id\"\n              label=\"id\"\n              defaultValue={props.id}\n              type=\"text\"\n              fullWidth\n              theme={theme.input}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome do jogo\"\n              defaultValue={props.name}\n              type=\"text\"\n              onChange={handleChangeValues}\n              fullWidth\n              maxLength={45}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"cost\"\n              label=\"preÃ§o\"\n              defaultValue={props.cost}\n              type=\"number\"\n              min=\"0.00\"\n              max=\"10000.00\"\n              step=\"0.01\"\n              className=\"money\"\n              pattern=\"^\\d*(\\.\\d{0,2})?$\"\n              onChange={handleChangeValues}\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"category\"\n              label=\"Categoria\"\n              defaultValue={props.category}\n              type=\"text\"\n              onChange={handleChangeValues}\n              fullWidth\n              maxLength={45}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={() => handleDeleteGame()}>\n              Excluir\n            </Button>\n            <Button color=\"primary\" onClick={() => handleEditGame()}>\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </ThemeProvider>\n    </div>\n  );\n}\n",{"ruleId":"40","severity":1,"message":"41","line":5,"column":13,"nodeType":"42","messageId":"43","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":17,"column":6,"nodeType":"46","endLine":17,"endColumn":15,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":92,"column":11,"nodeType":"50","endLine":92,"endColumn":81},{"ruleId":"40","severity":1,"message":"51","line":9,"column":10,"nodeType":"42","messageId":"43","endLine":9,"endColumn":17},{"ruleId":"40","severity":1,"message":"52","line":9,"column":19,"nodeType":"42","messageId":"43","endLine":9,"endColumn":30},{"ruleId":"48","severity":1,"message":"49","line":49,"column":11,"nodeType":"50","endLine":49,"endColumn":57,"suppressions":"53"},{"ruleId":"48","severity":1,"message":"49","line":53,"column":11,"nodeType":"50","endLine":53,"endColumn":78,"suppressions":"54"},{"ruleId":"48","severity":1,"message":"49","line":67,"column":11,"nodeType":"50","endLine":67,"endColumn":76,"suppressions":"55"},{"ruleId":"40","severity":1,"message":"56","line":2,"column":18,"nodeType":"42","messageId":"43","endLine":2,"endColumn":28},{"ruleId":"40","severity":1,"message":"51","line":64,"column":10,"nodeType":"42","messageId":"43","endLine":64,"endColumn":17},{"ruleId":"40","severity":1,"message":"52","line":64,"column":19,"nodeType":"42","messageId":"43","endLine":64,"endColumn":30},{"ruleId":"40","severity":1,"message":"57","line":101,"column":10,"nodeType":"42","messageId":"43","endLine":101,"endColumn":14},{"ruleId":"40","severity":1,"message":"58","line":101,"column":16,"nodeType":"42","messageId":"43","endLine":101,"endColumn":23},{"ruleId":"40","severity":1,"message":"59","line":103,"column":9,"nodeType":"42","messageId":"43","endLine":103,"endColumn":19},"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListGame'. Either include it or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'refresh' is assigned a value but never used.","'refreshInit' is assigned a value but never used.",["61"],["62"],["63"],"'makeStyles' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'handleOpen' is assigned a value but never used.",{"desc":"64","fix":"65"},{"kind":"66","justification":"67"},{"kind":"66","justification":"67"},{"kind":"66","justification":"67"},"Update the dependencies array to be: [getListGame, refresh]",{"range":"68","text":"69"},"directive","",[482,491],"[getListGame, refresh]"]